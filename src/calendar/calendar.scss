@use "../variables.scss";

$padding: 2%;
$font-border-color: #000;
$background-color: #b4b4b4;

@mixin grid-item($title: false, $text-align: start) {
  padding: $padding 0;
  font-size: 2em;
  text-align: $text-align;
  border-color: $font-border-color;

  // Title does not have borders.
  @if not $title {
    border-bottom: 1px solid;
    border-right: 0;

    // Remove padding and border left on first element in grid.
    @for $i from 1 through 2 {
      &:nth-last-of-type(3n + #{$i}) {
        border-left: 1px solid;
        padding-left: 2%;
      }
    }

    &:nth-child(3n-2) {
      padding-left: 0;
    }

    &:nth-child(3n) {
      padding-right: 0;
    }

    // Remove border from top.
    &:nth-child(-n+3) {
      border-top: 0;
    }

    // Remove border from bottom.
    &:nth-last-child(-n+3) {
      border-bottom: 0;
    }
  }
}

.template-calendar {
  height: 100%;
  background-color: var(--bg-dark);
  color: var(--color-white);
  background-repeat: no-repeat;
  background-size: cover;

  &.colorize {
    background-blend-mode: multiply, luminosity;
  }

  .grid-container-title-date {
    display: grid;
    grid-template-columns: auto auto;
    padding: $padding;
    align-items: center;
    font-size: 1.4em;

    .grid-item {
      @include grid-item($title: true);
      padding: 0;
    }

    .grid-item-end {
      @include grid-item($title: true, $text-align: end);
      padding: 0;
    }
  }

  .grid-container {
    display: grid;
    grid-template-columns: auto auto auto;
    padding: $padding;

    .grid-item {
      @include grid-item();
      padding: $padding * 2;
    }
  }

  &.red {
    background-color: var(--color-red);
    color: var(--color-white);
    border-color: var(--color-white);
  }

  &.blue {
    background-color: var(--color-blue);
    color: var(--color-white);
    border-color: var(--color-white);
  }

  &.yellow {
    background-color: var(--color-yellow);
    color: var(--color-white);
    border-color: var(--color-white);
  }

  .header {
    font-weight: bold;
  }
}
